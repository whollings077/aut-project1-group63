/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QuizProgram;

import QuizProgram.API;
import QuizProgram.Leaderboard;
import QuizProgram.Question;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.table.DefaultTableModel;
import java.util.Comparator;

/**
 *
 * @author GGPC
 */
public class MainFrame extends javax.swing.JFrame {

    private boolean endless;
    private List<Question> questions;
    private DatabaseManager dbManager;
    public String difficulty = "";
    public int winnings = 0;
    public int lifelinecount = 0;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        dbManager = new DatabaseManager();
        initComponents();
        populateMillionairesTable(); // calls method below
    }

    private void populateMillionairesTable() {
        DefaultTableModel model = (DefaultTableModel) GUILeaderboard.getModel();
        model.setRowCount(0); // Clear existing data

        List<Object[]> millionairesData = dbManager.getMillionaires();
        List<Object[]> nearMillionairesData = dbManager.getNearMillionaires();
        for (Object[] row : millionairesData) {
            Object[] rowWithWinnings = new Object[row.length + 2];
            rowWithWinnings[0] = row[0]; // Name
            rowWithWinnings[1] = 1000000; // Winnings
            rowWithWinnings[2] = row[1]; // LifelineCount
            rowWithWinnings[3] = row[2]; // Difficulty
            rowWithWinnings[4] = "Millionaire"; // Type
            millionairesData.set(millionairesData.indexOf(row), rowWithWinnings);
        }
        for (Object[] row : nearMillionairesData) {
            Object[] rowWithLabel = new Object[5];
            rowWithLabel[0] = row[1]; // Name
            rowWithLabel[1] = row[0]; // Winnings
            rowWithLabel[2] = row[2]; // Difficulty
            rowWithLabel[3] = row[3]; // LifelineCount
            rowWithLabel[4] = "Near Millionaire"; // Type
            nearMillionairesData.set(nearMillionairesData.indexOf(row), rowWithLabel);
        }
        List<Object[]> allData = new ArrayList<>(millionairesData);
        allData.addAll(nearMillionairesData);

        // Sort the combined list by winnings
        Collections.sort(allData, new Comparator<Object[]>() {
            @Override
            public int compare(Object[] o1, Object[] o2) {
                Integer winnings1 = (Integer) o1[1];
                Integer winnings2 = (Integer) o2[1];
                return winnings2.compareTo(winnings1); // Sort in descending order
            }
        });

        // Add sorted rows to the table model
        for (Object[] row : allData) {
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        textPanel = new javax.swing.JPanel();
        menuTitle = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        difficultyPanel = new javax.swing.JPanel();
        difficultyHeader = new javax.swing.JPanel();
        Question1 = new javax.swing.JLabel();
        difficultyBack = new javax.swing.JButton();
        difficultyOptions = new javax.swing.JPanel();
        button9 = new javax.swing.JButton();
        button10 = new javax.swing.JButton();
        button11 = new javax.swing.JButton();
        gamePanel = new javax.swing.JPanel();
        gameHeaderPanel = new javax.swing.JPanel();
        questionNumber = new javax.swing.JLabel();
        winningsLabel = new javax.swing.JLabel();
        howToBack1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionText = new javax.swing.JTextArea();
        skipButton = new javax.swing.JButton();
        fiftyFiftyButton = new javax.swing.JButton();
        answersPanel = new javax.swing.JPanel();
        answer1 = new javax.swing.JButton();
        answer2 = new javax.swing.JButton();
        answer4 = new javax.swing.JButton();
        answer3 = new javax.swing.JButton();
        endlessPanel = new javax.swing.JPanel();
        gameHeaderPanel1 = new javax.swing.JPanel();
        endlessQuestionNo = new javax.swing.JLabel();
        howToBack2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        endlessQuestionText = new javax.swing.JTextArea();
        skipButton1 = new javax.swing.JButton();
        fiftyFiftyButton1 = new javax.swing.JButton();
        answersPanel1 = new javax.swing.JPanel();
        answer5 = new javax.swing.JButton();
        answer6 = new javax.swing.JButton();
        answer7 = new javax.swing.JButton();
        answer8 = new javax.swing.JButton();
        howToPanel = new javax.swing.JPanel();
        howToHeaderPanel = new javax.swing.JPanel();
        howToPlayTitle = new javax.swing.JLabel();
        howToBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        leaderboardPanel = new javax.swing.JPanel();
        leaderboardHeaderPanel = new javax.swing.JPanel();
        leaderboardTitle = new javax.swing.JLabel();
        leaderboardBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        GUILeaderboard = new javax.swing.JTable();
        endPanel = new javax.swing.JPanel();
        endHeader = new javax.swing.JPanel();
        endTitle = new javax.swing.JLabel();
        endSubtitle = new javax.swing.JLabel();
        endButtons = new javax.swing.JPanel();
        button12 = new javax.swing.JButton();
        button13 = new javax.swing.JButton();
        button14 = new javax.swing.JButton();
        savePanel = new javax.swing.JPanel();
        saveHeader = new javax.swing.JPanel();
        saveTitle = new javax.swing.JLabel();
        savePanelNameField = new javax.swing.JTextField(20);
        saveButtons = new javax.swing.JPanel();
        savePanelSaveButton = new javax.swing.JButton();
        savePanelMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Who Wants To Be A Millionaire");
        setBackground(new java.awt.Color(255, 204, 255));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 204, 255));
        mainPanel.setName(""); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        mainPanel.setLayout(new java.awt.CardLayout());

        menuPanel.setBackground(new java.awt.Color(255, 204, 255));
        menuPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        menuPanel.setLayout(new java.awt.BorderLayout());

        textPanel.setOpaque(false);

        menuTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 32)); // NOI18N
        menuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuTitle.setText("Welcome to Who Wants To Be A Millionaire!");
        menuTitle.setAlignmentX(0.5F);

        javax.swing.GroupLayout textPanelLayout = new javax.swing.GroupLayout(textPanel);
        textPanel.setLayout(textPanelLayout);
        textPanelLayout.setHorizontalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(menuTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        textPanelLayout.setVerticalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, textPanelLayout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addComponent(menuTitle)
                .addGap(133, 133, 133))
        );

        menuPanel.add(textPanel, java.awt.BorderLayout.CENTER);

        buttonsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        buttonsPanel.setOpaque(false);
        buttonsPanel.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        button1.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button1.setText("Start Game");
        button1.setPreferredSize(new java.awt.Dimension(250, 150));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        buttonsPanel.add(button1);

        button2.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button2.setText("Endless Mode");
        button2.setPreferredSize(new java.awt.Dimension(250, 150));
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });
        buttonsPanel.add(button2);

        button3.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button3.setText("How to Play");
        button3.setPreferredSize(new java.awt.Dimension(250, 150));
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howToPlayButtonPressed(evt);
            }
        });
        buttonsPanel.add(button3);

        button4.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button4.setText("Leaderboard");
        button4.setPreferredSize(new java.awt.Dimension(250, 150));
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderboardButtonPressed(evt);
            }
        });
        buttonsPanel.add(button4);

        menuPanel.add(buttonsPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.add(menuPanel, "menuPanel");

        difficultyPanel.setBackground(new java.awt.Color(255, 204, 255));
        difficultyPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        difficultyPanel.setLayout(new java.awt.BorderLayout());

        difficultyHeader.setOpaque(false);

        Question1.setFont(new java.awt.Font("Century Schoolbook", 1, 32)); // NOI18N
        Question1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Question1.setText("Please Select a Difficulty");
        Question1.setAlignmentX(0.5F);

        difficultyBack.setBackground(new java.awt.Color(255, 153, 153));
        difficultyBack.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        difficultyBack.setText("Back");
        difficultyBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        difficultyBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyBack(evt);
            }
        });

        javax.swing.GroupLayout difficultyHeaderLayout = new javax.swing.GroupLayout(difficultyHeader);
        difficultyHeader.setLayout(difficultyHeaderLayout);
        difficultyHeaderLayout.setHorizontalGroup(
            difficultyHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(difficultyHeaderLayout.createSequentialGroup()
                .addGroup(difficultyHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(difficultyHeaderLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(difficultyBack, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(difficultyHeaderLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(Question1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        difficultyHeaderLayout.setVerticalGroup(
            difficultyHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(difficultyHeaderLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(difficultyBack, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Question1)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        difficultyPanel.add(difficultyHeader, java.awt.BorderLayout.CENTER);

        difficultyOptions.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        difficultyOptions.setOpaque(false);
        difficultyOptions.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        button9.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button9.setText("Easy");
        button9.setPreferredSize(new java.awt.Dimension(250, 150));
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });
        difficultyOptions.add(button9);

        button10.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button10.setText("Medium");
        button10.setPreferredSize(new java.awt.Dimension(250, 150));
        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });
        difficultyOptions.add(button10);

        button11.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button11.setText("Hard");
        button11.setPreferredSize(new java.awt.Dimension(250, 150));
        button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button11ActionPerformed(evt);
            }
        });
        difficultyOptions.add(button11);

        difficultyPanel.add(difficultyOptions, java.awt.BorderLayout.SOUTH);

        mainPanel.add(difficultyPanel, "difficultyPanel");

        gamePanel.setBackground(new java.awt.Color(255, 204, 255));
        gamePanel.setPreferredSize(new java.awt.Dimension(970, 690));
        gamePanel.setLayout(new java.awt.BorderLayout());

        gameHeaderPanel.setOpaque(false);

        questionNumber.setFont(new java.awt.Font("Century Schoolbook", 1, 32)); // NOI18N
        questionNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        questionNumber.setAlignmentX(0.5F);

        winningsLabel.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        winningsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winningsLabel.setAlignmentX(0.5F);

        howToBack1.setBackground(new java.awt.Color(255, 153, 153));
        howToBack1.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        howToBack1.setText("Back");
        howToBack1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        howToBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameBack(evt);
            }
        });

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 204, 255)));
        jScrollPane2.setOpaque(false);
        jScrollPane2.setWheelScrollingEnabled(false);
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setBorder(null);

        questionText.setEditable(false);
        questionText.setColumns(20);
        questionText.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        questionText.setRows(5);
        questionText.setBorder(null);
        questionText.setOpaque(false);
        questionText.setOpaque(false);
        questionText.setBackground(new Color(0, 0, 0, 0)); 
        questionText.setLineWrap(true);
        questionText.setWrapStyleWord(true);
        questionText.setBorder(null);
        jScrollPane2.setViewportView(questionText);

        skipButton.setBackground(new java.awt.Color(204, 255, 204));
        skipButton.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        skipButton.setText("Skip");
        skipButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        skipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipButton(evt);
            }
        });

        fiftyFiftyButton.setBackground(new java.awt.Color(204, 255, 204));
        fiftyFiftyButton.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        fiftyFiftyButton.setText("50:50");
        fiftyFiftyButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        fiftyFiftyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiftyFiftyButton(evt);
            }
        });

        answersPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        answersPanel.setOpaque(false);
        answersPanel.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        answer1.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer1.setPreferredSize(new java.awt.Dimension(250, 150));
        answer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer1(evt);
            }
        });
        answersPanel.add(answer1);

        answer2.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer2.setPreferredSize(new java.awt.Dimension(250, 150));
        answer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer2ActionPerformed(evt);
            }
        });
        answersPanel.add(answer2);

        answer4.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer4.setPreferredSize(new java.awt.Dimension(250, 150));
        answer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer4leaderboardButtonPressed(evt);
            }
        });
        answersPanel.add(answer4);

        answer3.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer3.setPreferredSize(new java.awt.Dimension(250, 150));
        answer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer3howToPlayButtonPressed(evt);
            }
        });
        answersPanel.add(answer3);

        javax.swing.GroupLayout gameHeaderPanelLayout = new javax.swing.GroupLayout(gameHeaderPanel);
        gameHeaderPanel.setLayout(gameHeaderPanelLayout);
        gameHeaderPanelLayout.setHorizontalGroup(
            gameHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameHeaderPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(howToBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(questionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(fiftyFiftyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(gameHeaderPanelLayout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(winningsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanelLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(gameHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanelLayout.createSequentialGroup()
                        .addComponent(answersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );
        gameHeaderPanelLayout.setVerticalGroup(
            gameHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameHeaderPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(gameHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(gameHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(howToBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fiftyFiftyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(skipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(winningsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        gamePanel.add(gameHeaderPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.add(gamePanel, "gamePanel");

        endlessPanel.setBackground(new java.awt.Color(255, 204, 255));
        endlessPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        endlessPanel.setLayout(new java.awt.BorderLayout());

        gameHeaderPanel1.setOpaque(false);

        endlessQuestionNo.setFont(new java.awt.Font("Century Schoolbook", 1, 32)); // NOI18N
        endlessQuestionNo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endlessQuestionNo.setAlignmentX(0.5F);

        howToBack2.setBackground(new java.awt.Color(255, 153, 153));
        howToBack2.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        howToBack2.setText("Back");
        howToBack2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        howToBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howToBack2gameBack(evt);
            }
        });

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane4.setViewportBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 204, 255)));
        jScrollPane4.setOpaque(false);
        jScrollPane4.setWheelScrollingEnabled(false);
        jScrollPane4.setOpaque(false);
        jScrollPane4.getViewport().setOpaque(false);
        jScrollPane4.setBorder(null);

        endlessQuestionText.setEditable(false);
        endlessQuestionText.setColumns(20);
        endlessQuestionText.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        endlessQuestionText.setRows(5);
        endlessQuestionText.setBorder(null);
        endlessQuestionText.setOpaque(false);
        endlessQuestionText.setOpaque(false);
        endlessQuestionText.setBackground(new Color(0, 0, 0, 0)); 
        endlessQuestionText.setLineWrap(true);
        endlessQuestionText.setWrapStyleWord(true);
        endlessQuestionText.setBorder(null);
        jScrollPane4.setViewportView(endlessQuestionText);

        skipButton1.setBackground(new java.awt.Color(204, 255, 204));
        skipButton1.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        skipButton1.setText("Skip");
        skipButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        skipButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipButton1(evt);
            }
        });

        fiftyFiftyButton1.setBackground(new java.awt.Color(204, 255, 204));
        fiftyFiftyButton1.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        fiftyFiftyButton1.setText("50:50");
        fiftyFiftyButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        fiftyFiftyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiftyFiftyButton1(evt);
            }
        });

        answersPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        answersPanel1.setOpaque(false);
        answersPanel1.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        answer5.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer5.setPreferredSize(new java.awt.Dimension(250, 150));
        answer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer5(evt);
            }
        });
        answersPanel1.add(answer5);

        answer6.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer6.setPreferredSize(new java.awt.Dimension(250, 150));
        answer6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer6ActionPerformed(evt);
            }
        });
        answersPanel1.add(answer6);

        answer7.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer7.setPreferredSize(new java.awt.Dimension(250, 150));
        answer7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer7leaderboardButtonPressed(evt);
            }
        });
        answersPanel1.add(answer7);

        answer8.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 16)); // NOI18N
        answer8.setPreferredSize(new java.awt.Dimension(250, 150));
        answer8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer8howToPlayButtonPressed(evt);
            }
        });
        answersPanel1.add(answer8);

        javax.swing.GroupLayout gameHeaderPanel1Layout = new javax.swing.GroupLayout(gameHeaderPanel1);
        gameHeaderPanel1.setLayout(gameHeaderPanel1Layout);
        gameHeaderPanel1Layout.setHorizontalGroup(
            gameHeaderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameHeaderPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(howToBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(endlessQuestionNo, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(fiftyFiftyButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skipButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanel1Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(gameHeaderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanel1Layout.createSequentialGroup()
                        .addComponent(answersPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameHeaderPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );
        gameHeaderPanel1Layout.setVerticalGroup(
            gameHeaderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameHeaderPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(gameHeaderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endlessQuestionNo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(gameHeaderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(howToBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fiftyFiftyButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(skipButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answersPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        endlessPanel.add(gameHeaderPanel1, java.awt.BorderLayout.PAGE_START);

        mainPanel.add(endlessPanel, "endlessPanel");

        howToPanel.setBackground(new java.awt.Color(255, 204, 255));
        howToPanel.setName(""); // NOI18N
        howToPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        howToPanel.setLayout(new java.awt.BorderLayout());

        howToHeaderPanel.setBackground(new java.awt.Color(255, 204, 255));

        howToPlayTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 36)); // NOI18N
        howToPlayTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        howToPlayTitle.setText("How to Play");
        howToPlayTitle.setAlignmentX(0.5F);

        howToBack.setBackground(new java.awt.Color(255, 153, 153));
        howToBack.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        howToBack.setText("Back");
        howToBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        howToBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howToBack(evt);
            }
        });

        javax.swing.GroupLayout howToHeaderPanelLayout = new javax.swing.GroupLayout(howToHeaderPanel);
        howToHeaderPanel.setLayout(howToHeaderPanelLayout);
        howToHeaderPanelLayout.setHorizontalGroup(
            howToHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToHeaderPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(howToBack, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220)
                .addComponent(howToPlayTitle)
                .addContainerGap(374, Short.MAX_VALUE))
        );
        howToHeaderPanelLayout.setVerticalGroup(
            howToHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToHeaderPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(howToHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(howToBack, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(howToPlayTitle))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        howToPanel.add(howToHeaderPanel, java.awt.BorderLayout.NORTH);

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setMinimumSize(new java.awt.Dimension(200, 200));
        jScrollPane3.setOpaque(false);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(255, 204, 255));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 23)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("           In this game you will be asked 10 random questions at a difficulty of your choosing! \n                  You will be presented with 4 possible answers but only ONE will be correct.\n\n             You have two lifelines which can each help you out with a question if you're stuck. \n            50:50 will get rid of two incorrect answers (Only works on questions with 4 answers)\n                                                   Skip will skip the current question.\n\n                                 To answer questions, click on the button with your answer.\n                              To activate your lifelines, click on the buttons in the top right.\n\n                   Each question you answer will earn you more money and if you get all 10\n                         correct, you win $1,000,000! Get one wrong and it's back to zero!");
        jTextArea2.setBorder(null);
        jTextArea2.setDisabledTextColor(null);
        jTextArea2.setOpaque(false);
        jScrollPane3.setViewportView(jTextArea2);

        howToPanel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        mainPanel.add(howToPanel, "howToPanel");

        leaderboardPanel.setBackground(new java.awt.Color(255, 204, 255));
        leaderboardPanel.setName(""); // NOI18N
        leaderboardPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        leaderboardPanel.setLayout(new java.awt.BorderLayout());

        leaderboardHeaderPanel.setBackground(new java.awt.Color(255, 204, 255));

        leaderboardTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 36)); // NOI18N
        leaderboardTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        leaderboardTitle.setText("Leaderboard");
        leaderboardTitle.setAlignmentX(0.5F);

        leaderboardBack.setBackground(new java.awt.Color(255, 153, 153));
        leaderboardBack.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        leaderboardBack.setText("Back");
        leaderboardBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        leaderboardBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderboardBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leaderboardHeaderPanelLayout = new javax.swing.GroupLayout(leaderboardHeaderPanel);
        leaderboardHeaderPanel.setLayout(leaderboardHeaderPanelLayout);
        leaderboardHeaderPanelLayout.setHorizontalGroup(
            leaderboardHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leaderboardHeaderPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(leaderboardBack, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211)
                .addComponent(leaderboardTitle)
                .addContainerGap(366, Short.MAX_VALUE))
        );
        leaderboardHeaderPanelLayout.setVerticalGroup(
            leaderboardHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leaderboardHeaderPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(leaderboardHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leaderboardBack, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leaderboardTitle))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        leaderboardPanel.add(leaderboardHeaderPanel, java.awt.BorderLayout.NORTH);

        GUILeaderboard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Winnings", "Lifeline Count", "Difficulty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GUILeaderboard);
        GUILeaderboard.getAccessibleContext().setAccessibleName("");

        leaderboardPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        mainPanel.add(leaderboardPanel, "leaderboardPanel");

        endPanel.setBackground(new java.awt.Color(255, 204, 255));
        endPanel.setPreferredSize(new java.awt.Dimension(970, 690));
        endPanel.setLayout(new java.awt.BorderLayout());

        endHeader.setOpaque(false);

        endTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 56)); // NOI18N
        endTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endTitle.setAlignmentX(0.5F);

        endSubtitle.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N

        javax.swing.GroupLayout endHeaderLayout = new javax.swing.GroupLayout(endHeader);
        endHeader.setLayout(endHeaderLayout);
        endHeaderLayout.setHorizontalGroup(
            endHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endHeaderLayout.createSequentialGroup()
                .addGroup(endHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(endHeaderLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(endTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(endHeaderLayout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(endSubtitle)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        endHeaderLayout.setVerticalGroup(
            endHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endHeaderLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(endTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endSubtitle)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        endPanel.add(endHeader, java.awt.BorderLayout.CENTER);

        endButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        endButtons.setOpaque(false);
        endButtons.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        button12.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button12.setText("Save Score to Leaderboard");
        button12.setPreferredSize(new java.awt.Dimension(250, 150));
        button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button12ActionPerformed(evt);
            }
        });
        endButtons.add(button12);

        button13.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button13.setText("Try Again");
        button13.setPreferredSize(new java.awt.Dimension(250, 150));
        button13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button13ActionPerformed(evt);
            }
        });
        endButtons.add(button13);

        button14.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        button14.setText("Back to Menu");
        button14.setPreferredSize(new java.awt.Dimension(250, 150));
        button14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button14ActionPerformed(evt);
            }
        });
        endButtons.add(button14);

        endPanel.add(endButtons, java.awt.BorderLayout.SOUTH);

        mainPanel.add(endPanel, "endPanel");

        savePanel.setBackground(new java.awt.Color(255, 204, 255));
        savePanel.setPreferredSize(new java.awt.Dimension(970, 690));
        savePanel.setLayout(new java.awt.BorderLayout());

        saveHeader.setOpaque(false);

        saveTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 56)); // NOI18N
        saveTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveTitle.setText("Enter your name:");
        saveTitle.setAlignmentX(0.5F);

        savePanelNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePanelNameFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout saveHeaderLayout = new javax.swing.GroupLayout(saveHeader);
        saveHeader.setLayout(saveHeaderLayout);
        saveHeaderLayout.setHorizontalGroup(
            saveHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveHeaderLayout.createSequentialGroup()
                .addGroup(saveHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(saveHeaderLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(saveTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(saveHeaderLayout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(savePanelNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        saveHeaderLayout.setVerticalGroup(
            saveHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveHeaderLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(saveTitle)
                .addGap(18, 18, 18)
                .addComponent(savePanelNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        savePanel.add(saveHeader, java.awt.BorderLayout.CENTER);

        saveButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        saveButtons.setOpaque(false);
        saveButtons.setLayout(new java.awt.GridLayout(2, 2, 30, 10));

        savePanelSaveButton.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        savePanelSaveButton.setText("Save Score to Leaderboard");
        savePanelSaveButton.setPreferredSize(new java.awt.Dimension(250, 150));
        savePanelSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePanelSaveButtonActionPerformed(evt);
            }
        });
        saveButtons.add(savePanelSaveButton);

        savePanelMenuButton.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        savePanelMenuButton.setText("Back to Menu");
        savePanelMenuButton.setPreferredSize(new java.awt.Dimension(250, 150));
        savePanelMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePanelMenuButtonActionPerformed(evt);
            }
        });
        saveButtons.add(savePanelMenuButton);

        savePanel.add(saveButtons, java.awt.BorderLayout.SOUTH);

        mainPanel.add(savePanel, "savePanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        endless = false;
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "difficultyPanel");
    }//GEN-LAST:event_button1ActionPerformed

    private void howToPlayButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howToPlayButtonPressed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "howToPanel");
    }//GEN-LAST:event_howToPlayButtonPressed

    private void leaderboardButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderboardButtonPressed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "leaderboardPanel");
    }//GEN-LAST:event_leaderboardButtonPressed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        endless = true;
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "difficultyPanel");
    }//GEN-LAST:event_button2ActionPerformed

    private void howToBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howToBack
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_howToBack

    private void answer1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer1
        // TODO add your handling code here:
    }//GEN-LAST:event_answer1

    private void answer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer2ActionPerformed

    private void answer3howToPlayButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer3howToPlayButtonPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer3howToPlayButtonPressed

    private void answer4leaderboardButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer4leaderboardButtonPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer4leaderboardButtonPressed

    private void gameBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameBack
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_gameBack

    private void leaderboardBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderboardBackActionPerformed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_leaderboardBackActionPerformed

    private void difficultyBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyBack
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_difficultyBack

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        if (endless == false) {
            questions = API.fetchQuestions("easy");
            difficulty = "Easy";
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "gamePanel");
            GUIGameplay newGame = new GUIGameplay(questions);
            newGame.askNextQuestion();
        } else {
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "endlessPanel");
            GUIEndless newEndless = new GUIEndless("easy");
            difficulty = "Easy";
            GUIEndless.play();
        }
    }//GEN-LAST:event_button9ActionPerformed

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button10ActionPerformed
        if (endless == false) {
            questions = API.fetchQuestions("medium");
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "gamePanel");
            GUIGameplay newGame = new GUIGameplay(questions);
            difficulty = "Medium";
            newGame.askNextQuestion();
        } else {
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "endlessPanel");
            GUIEndless newEndless = new GUIEndless("medium");
            difficulty = "Medium";
            GUIEndless.play();
        }
    }//GEN-LAST:event_button10ActionPerformed

    private void button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button11ActionPerformed
        if (endless == false) {
            questions = API.fetchQuestions("hard");
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "gamePanel");
            GUIGameplay newGame = new GUIGameplay(questions);
            difficulty = "Hard";
            newGame.askNextQuestion();
        } else {
            CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
            cardLayout.show(mainPanel, "endlessPanel");
            GUIEndless newEndless = new GUIEndless("hard");
            difficulty = "Hard";
            GUIEndless.play();
        }
    }//GEN-LAST:event_button11ActionPerformed

    private void skipButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButton
        skipButton.setBackground(new Color(255, 153, 153));
        GUILifeline.skip(GUIGameplay.getCurrentQuestion(), GUIGameplay.getCurrentOptions(), false);
    }//GEN-LAST:event_skipButton

    private void fiftyFiftyButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiftyFiftyButton
        GUILifeline.fiftyFifty(GUIGameplay.getCurrentOptions(), GUIGameplay.getCurrentCorrectAnswer(), GUIGameplay.getAnswerButtons());
    }//GEN-LAST:event_fiftyFiftyButton

    private void button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button12ActionPerformed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "savePanel");
    }//GEN-LAST:event_button12ActionPerformed

    private void button13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button13ActionPerformed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "difficultyPanel");
    }//GEN-LAST:event_button13ActionPerformed

    private void button14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button14ActionPerformed
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_button14ActionPerformed

    private void savePanelSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePanelSaveButtonActionPerformed
        // TODO add your handling code here:
        int savedwinnings = GUIGameplay.getWinnings();
        String playerName = savePanelNameField.getText();
        if (savedwinnings == 1000000) {
            dbManager.addMillionaire(playerName, lifelinecount, difficulty);
        } else {
            dbManager.addNearMillionaire(savedwinnings, playerName, lifelinecount, difficulty);
        }
        populateMillionairesTable();
        //this should return to menu *hopefully*
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_savePanelSaveButtonActionPerformed

    private void savePanelMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePanelMenuButtonActionPerformed
        // TODO add your handling code here:
        //this should return to menu *hopefully*
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_savePanelMenuButtonActionPerformed

    private void howToBack2gameBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howToBack2gameBack
        CardLayout cardLayout = (CardLayout) mainPanel.getLayout();
        cardLayout.show(mainPanel, "menuPanel");
    }//GEN-LAST:event_howToBack2gameBack

    private void skipButton1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButton1
        skipButton.setBackground(new Color(255, 153, 153));
        GUILifeline.skip(GUIEndless.getCurrentQuestion(), GUIEndless.getCurrentOptions(), true);
        lifelinecount++;
    }//GEN-LAST:event_skipButton1

    private void fiftyFiftyButton1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiftyFiftyButton1
        lifelinecount++;
        GUILifeline.fiftyFifty(GUIEndless.getCurrentOptions(), GUIEndless.getCurrentCorrectAnswer(), GUIEndless.getAnswerButtons());
        
    }//GEN-LAST:event_fiftyFiftyButton1

    private void answer5(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer5
        // TODO add your handling code here:
    }//GEN-LAST:event_answer5

    private void answer6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer6ActionPerformed

    private void answer7leaderboardButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer7leaderboardButtonPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer7leaderboardButtonPressed

    private void answer8howToPlayButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer8howToPlayButtonPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer8howToPlayButtonPressed

    private void savePanelNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePanelNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_savePanelNameFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GUILeaderboard;
    private javax.swing.JLabel Question1;
    public static javax.swing.JButton answer1;
    public static javax.swing.JButton answer2;
    public static javax.swing.JButton answer3;
    public static javax.swing.JButton answer4;
    public static javax.swing.JButton answer5;
    public static javax.swing.JButton answer6;
    public static javax.swing.JButton answer7;
    public static javax.swing.JButton answer8;
    private javax.swing.JPanel answersPanel;
    private javax.swing.JPanel answersPanel1;
    private javax.swing.JButton button1;
    private javax.swing.JButton button10;
    private javax.swing.JButton button11;
    private javax.swing.JButton button12;
    private javax.swing.JButton button13;
    private javax.swing.JButton button14;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button9;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton difficultyBack;
    private javax.swing.JPanel difficultyHeader;
    private javax.swing.JPanel difficultyOptions;
    private javax.swing.JPanel difficultyPanel;
    private javax.swing.JPanel endButtons;
    private javax.swing.JPanel endHeader;
    private javax.swing.JPanel endPanel;
    public static javax.swing.JLabel endSubtitle;
    public static javax.swing.JLabel endTitle;
    private javax.swing.JPanel endlessPanel;
    public static javax.swing.JLabel endlessQuestionNo;
    public static javax.swing.JTextArea endlessQuestionText;
    public static javax.swing.JButton fiftyFiftyButton;
    public static javax.swing.JButton fiftyFiftyButton1;
    private javax.swing.JPanel gameHeaderPanel;
    private javax.swing.JPanel gameHeaderPanel1;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton howToBack;
    private javax.swing.JButton howToBack1;
    private javax.swing.JButton howToBack2;
    private javax.swing.JPanel howToHeaderPanel;
    private javax.swing.JPanel howToPanel;
    private javax.swing.JLabel howToPlayTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton leaderboardBack;
    private javax.swing.JPanel leaderboardHeaderPanel;
    private javax.swing.JPanel leaderboardPanel;
    private javax.swing.JLabel leaderboardTitle;
    public static javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel menuTitle;
    public static javax.swing.JLabel questionNumber;
    public static javax.swing.JTextArea questionText;
    private javax.swing.JPanel saveButtons;
    private javax.swing.JPanel saveHeader;
    private javax.swing.JPanel savePanel;
    private javax.swing.JButton savePanelMenuButton;
    private javax.swing.JTextField savePanelNameField;
    private javax.swing.JButton savePanelSaveButton;
    public static javax.swing.JLabel saveTitle;
    public static javax.swing.JButton skipButton;
    public static javax.swing.JButton skipButton1;
    private javax.swing.JPanel textPanel;
    public static javax.swing.JLabel winningsLabel;
    // End of variables declaration//GEN-END:variables
}
